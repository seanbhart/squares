.section {
  min-height: 100dvh;
  scroll-snap-align: start;
  scroll-snap-stop: always;
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--background);
  padding: 2rem;
  position: relative;
}

.content {
  max-width: 800px;
  width: 100%;
}

.header {
  margin-bottom: 3rem;
}

.progress {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
}

.progressText {
  font-size: 0.875rem;
  font-weight: 600;
  color: var(--foreground-secondary);
  text-transform: uppercase;
  letter-spacing: 0.1em;
}

.progressBar {
  display: flex;
  gap: 0.75rem;
}

.progressDot {
  width: 12px;
  height: 12px;
  border-radius: 50%;
  background: var(--foreground-tertiary, rgba(128, 128, 128, 0.3));
  transition: all 0.3s ease;
}

.progressDot[data-current="true"] {
  transform: scale(1.3);
  box-shadow: 0 0 0 4px rgba(52, 152, 219, 0.2);
}

.progressDot[data-complete="true"]:not([style*="backgroundColor"]) {
  background: var(--success, #2ecc71);
}

.questionArea {
  text-align: center;
  margin-bottom: 5rem;
}

.dimensionBadge {
  display: inline-flex;
  margin-bottom: 1.5rem;
}

.badgeSquare {
  width: 80px;
  height: 80px;
  border-radius: 16px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 3rem;
  font-weight: 900;
  color: white;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
}

.question {
  font-size: clamp(2rem, 5vw, 3.5rem);
  font-weight: 800;
  margin-bottom: 1rem;
  color: var(--foreground);
}

.instruction {
  font-size: clamp(1rem, 2vw, 1.25rem);
  color: var(--foreground-secondary);
  margin-bottom: 3rem;
}

.scaleContainer {
  display: grid;
  grid-template-columns: repeat(7, 1fr);
  gap: 1rem;
  margin-bottom: 1.5rem;
  max-width: 1200px;
  margin-left: auto;
  margin-right: auto;
}

/* Wrap to fewer columns on narrower screens */
@media (max-width: 1200px) {
  .scaleContainer {
    grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
  }
}

.option {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.75rem;
  padding: 1.25rem 0.75rem;
  background: var(--card-background, rgba(255, 255, 255, 0.05));
  border: 2px solid transparent;
  border-radius: 12px;
  cursor: pointer;
  transition: all 0.3s ease;
}

.option:hover {
  transform: translateY(-4px);
  border-color: var(--foreground-secondary);
  background: var(--card-hover-background, rgba(255, 255, 255, 0.1));
}

.option[data-selected="true"] {
  border-color: var(--accent, #3498db);
  background: var(--card-selected-background, rgba(52, 152, 219, 0.15));
  box-shadow: 0 4px 16px rgba(52, 152, 219, 0.3);
  transform: translateY(-2px);
}

/* Tentative state - center option before user confirms */
.option[data-tentative="true"] {
  border: 2px dashed var(--foreground-tertiary, rgba(128, 128, 128, 0.4));
  background: var(--card-background, rgba(255, 255, 255, 0.03));
  box-shadow: none;
  transform: none;
}

.option[data-tentative="true"] .optionSquare {
  opacity: 0.6;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.option[data-tentative="true"]:hover {
  border-style: solid;
  border-color: var(--accent, #3498db);
  background: var(--card-hover-background, rgba(52, 152, 219, 0.1));
}

.option[data-tentative="true"]:hover .optionSquare {
  opacity: 1;
}

.optionSquare {
  position: relative;
  width: 60px;
  height: 60px;
  border-radius: 10px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s ease;
}

.checkmark {
  font-size: 2rem;
  color: white;
  font-weight: 900;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
  animation: checkmarkPop 0.3s ease;
}

@keyframes checkmarkPop {
  0% { transform: scale(0); }
  50% { transform: scale(1.2); }
  100% { transform: scale(1); }
}

.optionLabel {
  font-size: 0.875rem;
  font-weight: 500;
  color: var(--foreground);
  text-align: center;
  line-height: 1.3;
}

.scaleLabels {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 1rem;
  flex-wrap: wrap;
  margin-top: 2rem;
}

.scaleLabel {
  font-size: 0.875rem;
  font-weight: 600;
  color: var(--foreground-secondary);
}

.scaleArrow {
  font-size: 1.25rem;
  color: var(--foreground-tertiary);
}

.continueHint {
  position: absolute;
  bottom: 2rem;
  left: 50%;
  transform: translateX(-50%);
  font-size: 0.875rem;
  color: var(--foreground-secondary);
  animation: bounce 2s ease-in-out infinite;
  text-align: center;
}

@keyframes bounce {
  0%, 100% { transform: translateX(-50%) translateY(0); }
  50% { transform: translateX(-50%) translateY(10px); }
}

@media (max-width: 768px) {
  .section {
    padding: 4rem 1rem 8rem; /* Extra space for mobile browser chrome top and bottom */
    min-height: 100dvh; /* Use dynamic viewport height */
  }
  
  .content {
    padding-top: env(safe-area-inset-top);
    padding-bottom: env(safe-area-inset-bottom);
  }
  
  .questionArea {
    margin-bottom: 4rem;
  }
  
  .scaleContainer {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 0.75rem;
    max-width: 100%;
  }
  
  /* Center option (4th item, index 3) on its own row */
  .option:nth-child(4) {
    grid-column: 1 / -1;
    max-width: 33.33%;
    margin: 0 auto;
  }
  
  .option {
    padding: 1rem 0.5rem;
  }
  
  .optionSquare {
    width: 48px;
    height: 48px;
  }
  
  .badgeSquare {
    width: 64px;
    height: 64px;
    font-size: 2.5rem;
  }
  
  .scaleLabels {
    display: none;
  }
  
  .continueHint {
    bottom: max(6rem, calc(6rem + env(safe-area-inset-bottom))); /* Well above browser chrome */
  }
}
